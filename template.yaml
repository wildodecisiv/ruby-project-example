AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Ruby Project Example Using Lambda Layer

Globals:
  Function:
    Timeout: 6
    MemorySize: 1024
    Runtime: ruby2.5
    Layers:
      - !Ref SharedLayer

Parameters:
  StageName:
    Type: String
    Default: staging
  DBUsername:
    Type: String
    Default: postgres
  DBPassword:
    Type: String
    Default: postgres
  DBUrl:
    Type: String
    Default: db_proxy_url_goes_here
  DBName:
    Type: String
    Default: NavistarConnectorDb
  DBPort:
    Type: String
    Default: 5432

Resources:

  ######### LAYERS ##########
  SharedLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: SharedRubyProjectExampleLayer
      Description: Layer to share code and dependencies
      ContentUri: app/layers/shared/layer.zip
      CompatibleRuntimes:
        - ruby2.5
      RetentionPolicy: Delete

  ######### LAMBDA FUNCTIONS ##########

  RubyProjectExampleHandler:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: app/functions/ruby_example/
      Handler: handler.RubyProjectExample::Functions::RubyProjectExampleHandler.event_handler
      Description: Lambda to try to reproduce issue
      Role: a_role_here
      Environment:
        Variables:
          STAGE: !Ref StageName
          DB_URL: !Ref DBUrl
          DB_NAME: !Ref DBName
          DB_PORT: !Ref DBPort
          DB_USERNAME: !Ref DBUsername
          DB_PASSWORD: !Ref DBPassword    

      Events:
        MySQSEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt MySQS.Arn
            BatchSize: 10

  ######### SQS Queues #################

  MySQS:
    Type: AWS::SQS::Queue
    Properties:
      DelaySeconds: 0
      VisibilityTimeout: 60       # (1 minute)
      MessageRetentionPeriod: 300 # (5 minutes)
      QueueName: !Sub "MY-SQS-${StageName}"

  ######### Secret Manager, Database and Db Proxy Configuration ###################

  SecretsManager:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub "ruby-project-example-secrets-manager-${StageName}"
      Description: This is a Secrets Manager secret for Ruby Example Project to the RDS DB instance
      SecretString: !Sub "{\"username\":\"${DBUsername}\",\"password\": \"${DBPassword}\"}"

  Database:
    Type: AWS::RDS::DBInstance
    DependsOn: SecretsManager
    Properties:
      AllocatedStorage: 20
      DBName: RubyProjectExampleDb
      DBInstanceClass: db.t2.small
      DBInstanceIdentifier: !Sub "ruby-project-example-db-${StageName}"
      MasterUsername: !Ref DBUsername
      MasterUserPassword: !Ref DBPassword
      Engine: Postgres
      EngineVersion: 11.5
      VPCSecurityGroups:
        - sg-mock-security-group-1
        - sg-mock-security-group-2
      DBSubnetGroupName: mock-db-subnet-group
      PubliclyAccessible: true

  SecretRDSInstanceAttachment:
    Type: AWS::SecretsManager::SecretTargetAttachment
    DependsOn: Database
    Properties:
      SecretId: !Ref SecretsManager
      TargetId: !Ref Database
      TargetType: AWS::RDS::DBInstance

  DatabaseProxy:
    Type: AWS::RDS::DBProxy
    DependsOn: SecretsManager
    Properties:
      DBProxyName: !Sub ruby-project-example-db-proxy-${StageName}"
      EngineFamily: POSTGRESQL
      RoleArn: arn_role_here
      RequireTLS: true
      Auth:
       - { AuthScheme: 'SECRETS', SecretArn: !Ref SecretsManager, IAMAuth: 'DISABLED' }
      VpcSecurityGroupIds:
        - sg-mock-security-group-1
        - sg-mock-security-group-2
      VpcSubnetIds:
        - subnet-mock-1
        - subnet-mock-2

  ProxyTargetGroup:
    Type: AWS::RDS::DBProxyTargetGroup
    DependsOn: DatabaseProxy
    Properties:
      DBProxyName: !Ref DatabaseProxy
      TargetGroupName: default
      DBInstanceIdentifiers:
        - !Sub "ruby-project-example-db-${StageName}"
